version: '3.8'

services:
  # PostgreSQL - 메인 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: energy_postgres
    environment:
      POSTGRES_DB: energy_management
      POSTGRES_USER: energy_user
      POSTGRES_PASSWORD: energy_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - energy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U energy_user -d energy_management"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InfluxDB - 시계열 데이터베이스
  influxdb:
    image: influxdb:2.7-alpine
    container_name: energy_influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: energy_password_2024
      DOCKER_INFLUXDB_INIT_ORG: energy_org
      DOCKER_INFLUXDB_INIT_BUCKET: energy_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: energy_admin_token_2024
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - energy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - 캐시 및 세션
  redis:
    image: redis:7-alpine
    container_name: energy_redis
    command: redis-server --appendonly yes --requirepass energy_password_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - energy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Elasticsearch - 검색 및 분석 (2단계)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: energy_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - energy_network
    restart: unless-stopped
    profiles:
      - stage2  # 2단계에서만 활성화

  # Kibana - Elasticsearch 대시보드 (2단계)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: energy_kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - energy_network
    restart: unless-stopped
    profiles:
      - stage2  # 2단계에서만 활성화

  # MinIO - S3 호환 파일 저장소 (2단계)
  minio:
    image: minio/minio:latest
    container_name: energy_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: energy_admin
      MINIO_ROOT_PASSWORD: energy_password_2024
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - energy_network
    restart: unless-stopped
    profiles:
      - stage2  # 2단계에서만 활성화

  # Prometheus - 메트릭 수집 (모니터링)
  prometheus:
    image: prom/prometheus:latest
    container_name: energy_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - energy_network
    restart: unless-stopped

  # Grafana - 대시보드 (모니터링)
  grafana:
    image: grafana/grafana:latest
    container_name: energy_grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: energy_password_2024
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - energy_network
    restart: unless-stopped

  # pgAdmin - PostgreSQL 관리 도구
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: energy_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@energy.com
      PGADMIN_DEFAULT_PASSWORD: energy_password_2024
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - energy_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  energy_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
